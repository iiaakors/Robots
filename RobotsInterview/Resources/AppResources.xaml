<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:ctrl="clr-namespace:RobotsInterview.Controls"
					xmlns:loc="clr-namespace:RobotsInterview">

	<SolidColorBrush x:Key="orangeBrush" Color="#ff6f37"/>
	<SolidColorBrush x:Key="blueBrush" Color="#008eff"/>
	<SolidColorBrush x:Key="greenBrush" Color="#439c4a"/>
	<SolidColorBrush x:Key="purpleBrush" Color="#ce37ff"/>
	<SolidColorBrush Color="White" Opacity=".1" x:Key="whiteBrush"/>

	<Style TargetType="{x:Type TextBlock}">
		<Setter Property="Margin" Value="3"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="LightGray"/>
	</Style>

	<Style TargetType="{x:Type TextBox}">
		<Setter Property="Margin" Value="3"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="LightGray"/>
		<Setter Property="CaretBrush" Value="#FF0D92DE"/>
	</Style>

	<Style TargetType="{x:Type Button}" x:Key="goButtonStyle">
		<Setter Property="Margin" Value="3"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<TextBlock Margin="{TemplateBinding Margin}"
							   VerticalAlignment="{TemplateBinding VerticalAlignment}"
							   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							   Foreground="{TemplateBinding Foreground}"
							   FontSize="14" FontStyle="Italic"
							   Text="{TemplateBinding Content}"
							   FontWeight="Bold"
							   Cursor="Hand" x:Name="tb">
						<TextBlock.Effect>
							<DropShadowEffect Color="Black" Opacity=".5"/>
						</TextBlock.Effect>
					</TextBlock>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="tb" Property="Foreground" Value="LightGray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<loc:LocationConverter x:Key="locationConverter"/>

	<DataTemplate DataType="{x:Type loc:Robot}" x:Shared="False">
		<Image Source="{Binding Image}" Height="25" Width="25">
			<Image.Style>
				<Style TargetType="{x:Type Image}">
					<Style.Triggers>
						<DataTrigger Binding="{Binding DirectionString}" Value="W">
							<Setter Property="Margin" Value="0,0,-6,-5"/>
						</DataTrigger>

						<DataTrigger Binding="{Binding DirectionString}" Value="E">
							<Setter Property="Margin" Value="-5,-5,0,0"/>
						</DataTrigger>

						<DataTrigger Binding="{Binding DirectionString}" Value="N">
							<Setter Property="Margin" Value="0,-5,-6,0"/>
						</DataTrigger>

						<DataTrigger Binding="{Binding DirectionString}" Value="S">
							<Setter Property="Margin" Value="-5,0,0,-5"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Image.Style>
		</Image>
	</DataTemplate>

	<DataTemplate DataType="{x:Type loc:Robot}" x:Key="robotControlTemplate">
		<Border BorderBrush="Black" BorderThickness="1" Margin="10"
				Background="{StaticResource whiteBrush}">
			<Border.InputBindings>
				<KeyBinding Key="Enter" Command="{Binding ProcessInstructionsCommand}"/>
			</Border.InputBindings>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>

				<Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" Background="{Binding Color}">
					<TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="White" Margin="10" FontStyle="Italic" FontSize="16">
						<TextBlock.Effect>
							<DropShadowEffect Color="Gray"/>
						</TextBlock.Effect>
					</TextBlock>
				</Grid>

				<TextBlock Grid.Row="1" Grid.Column="0" FontWeight="Bold" Text="X" HorizontalAlignment="Right"/>
				<TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent"/>

				<TextBlock Grid.Row="1" Grid.Column="2" FontWeight="Bold" Text="Y" HorizontalAlignment="Right"/>
				<TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent"/>

				<TextBlock Grid.Row="1" Grid.Column="4" FontWeight="Bold" Text="Direction" HorizontalAlignment="Right"/>
				<TextBox Grid.Row="1" Grid.Column="5" Text="{Binding DirectionString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent"/>

				<Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					
					<TextBlock Grid.Row="0" FontWeight="Bold" Text="Input Instructions"/>
					<TextBlock Grid.Row="1" Foreground="LightGray" Text="X Y" Margin="8,3,3,3">
						<TextBlock.Style>
							<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
								<Setter Property="Visibility" Value="Collapsed"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding ElementName=txtLine1, Path=Text.Length, UpdateSourceTrigger=PropertyChanged}" Value="0">
										<Setter Property="Visibility" Value="Visible"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
					<TextBox Grid.Row="1" Background="Transparent" x:Name="txtLine1"
							 Text="{Binding XYInstruction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
					
					<TextBlock Grid.Row="2" Foreground="LightGray" Text="Route" Margin="8,3,3,3">
						<TextBlock.Style>
							<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
								<Setter Property="Visibility" Value="Collapsed"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding ElementName=txtLine2, Path=Text.Length, UpdateSourceTrigger=PropertyChanged}" Value="0">
										<Setter Property="Visibility" Value="Visible"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
					<TextBox Grid.Row="2" VerticalAlignment="Stretch" TextWrapping="Wrap" Background="Transparent" x:Name="txtLine2"
							 Text="{Binding RouteInstruction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				</Grid>
				<Button Grid.Row="3" Grid.Column="5" HorizontalAlignment="Right" Content="Go" Command="{Binding ProcessInstructionsCommand}" Foreground="#FF0D92DE"
						Style="{StaticResource goButtonStyle}"/>
			</Grid>
		</Border>
	</DataTemplate>

	<DataTemplate DataType="{x:Type loc:Robot}" x:Key="robotOutputTemplate">
		<Border BorderBrush="DarkGray" BorderThickness="1">
			<Grid>
				<Grid.Resources>
					<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
						<Setter Property="FontWeight" Value="Bold"/>
						<Setter Property="Foreground" Value="{Binding Color}"/>
					</Style>
				</Grid.Resources>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Grid.Column="0" Text="Robot: "/>
				<TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>

				<TextBlock Grid.Row="1" Grid.Column="0" Text="Current X: "/>
				<TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Left, UpdateSourceTrigger=PropertyChanged}"/>
				<TextBlock Grid.Row="1" Grid.Column="2" Text="Current Y: "/>
				<TextBlock Grid.Row="1" Grid.Column="3" Text="{Binding Top, UpdateSourceTrigger=PropertyChanged}"/>

				<TextBlock Grid.Row="2" Grid.Column="0" Text="Current Direction: "/>
				<TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding DirectionString, UpdateSourceTrigger=PropertyChanged}"/>
				<TextBlock Grid.Row="2" Grid.Column="2" Text="Current Status: "/>
				<TextBlock Grid.Row="2" Grid.Column="3" Text="{Binding StatusText, UpdateSourceTrigger=PropertyChanged}"/>
			</Grid>
		</Border>
	</DataTemplate>
	
	<DataTemplate DataType="{x:Type loc:Arena}">
		<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
			<ctrl:ArenaCanvas Height="600" Width="600" HorizontalAlignment="Center" VerticalAlignment="Center"
							  Margin="0">
				<ctrl:ArenaCanvas.Background>
					<ImageBrush ImageSource="/Resources/Arena.jpg" TileMode="Tile" RenderOptions.BitmapScalingMode="HighQuality" 
								Viewport="0,0,168,168" ViewportUnits="Absolute" AlignmentX="Left" AlignmentY="Top"
								Stretch="None"/>
				</ctrl:ArenaCanvas.Background>
			</ctrl:ArenaCanvas>
			<Image Source="/Resources/Transformers.png" Opacity=".2" Height="400" Width="400" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0"/>
			<ListBox ItemsSource="{Binding Robots}" Height="650" Width="650" HorizontalAlignment="Center" VerticalAlignment="Center"
					 Background="Transparent" BorderThickness="0" Margin="0"
					 ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<Canvas Height="600" Width="600" IsItemsHost="True" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>
				<ListBox.ItemContainerStyle>
					<Style TargetType="{x:Type ListBoxItem}">
						<Setter Property="IsHitTestVisible" Value="False"/>
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform/>
							</Setter.Value>
						</Setter>
						<Setter Property="Canvas.Top" Value="{Binding Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource locationConverter}, ConverterParameter=T}"/>
						<Setter Property="Canvas.Left" Value="{Binding Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource locationConverter}, ConverterParameter=L}"/>
						<Setter Property="loc:AttachRotateBehavior.Angle" Value="{Binding Angle, UpdateSourceTrigger=PropertyChanged}"/>
						<Setter Property="ContentTemplate">
							<Setter.Value>
								<DataTemplate>
									<ContentPresenter Content="{Binding}">
										<ContentPresenter.Resources>
											<loc:BindingProxy DataContext="{Binding }" x:Key="robotProxy"
															  Element="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}"/>
										</ContentPresenter.Resources>
										<loc:AttachMoveBehavior.MoveBehavior>
											<loc:MoveBehavior
												Instruction="{Binding Source={StaticResource robotProxy}, Path=DataContext.Instruction,UpdateSourceTrigger=PropertyChanged}"
												Element="{Binding Source={StaticResource robotProxy}, Path=Element, UpdateSourceTrigger=PropertyChanged}"/>
										</loc:AttachMoveBehavior.MoveBehavior>
									</ContentPresenter>
								</DataTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ListBox.ItemContainerStyle>
			</ListBox>
		</Grid>
	</DataTemplate>

</ResourceDictionary>